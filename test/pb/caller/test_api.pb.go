// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test_api.proto

package caller

import (
	"context"

	"github.com/cashwagon/qrpc/pkg/qrpc"
	_pb "github.com/cashwagon/qrpc/test/pb"
	"github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the qrpc package it is being compiled against.
const _ = qrpc.SupportPackageIsVersion1

// TestAPIClient is the client API for TestAPI service.
type TestAPIClient interface {
	UnaryMethod(context.Context, *_pb.UnaryMethodRequest) error
	BinaryMethod(context.Context, *_pb.BinaryMethodRequest) error
}

type testAPIClient struct {
	cc *qrpc.ClientConn
}

func NewTestAPIClient(cc *qrpc.ClientConn) TestAPIClient {
	cc.SetService("qrpc.test.api.TestAPI.in")
	return &testAPIClient{cc}
}

func (c *testAPIClient) UnaryMethod(ctx context.Context, in *_pb.UnaryMethodRequest) error {
	data, err := proto.Marshal(in)
	if err != nil {
		return err
	}

	return c.cc.Invoke(ctx, qrpc.Message{
		Method: "UnaryMethod",
		Data:   data,
	})
}

func (c *testAPIClient) BinaryMethod(ctx context.Context, in *_pb.BinaryMethodRequest) error {
	data, err := proto.Marshal(in)
	if err != nil {
		return err
	}

	return c.cc.Invoke(ctx, qrpc.Message{
		Method: "BinaryMethod",
		Data:   data,
	})
}

// TestAPIServer is the server API for TestAPI service.
type TestAPIServer interface {
	BinaryMethod(context.Context, *_pb.BinaryMethodResponse) error
}

func RegisterTestAPIServer(s *qrpc.Server, srv TestAPIServer) {
	s.RegisterService(&_TestAPI_serviceDesc, srv)
}

func _TestAPI_BinaryMethod_Handler(srv interface{}, ctx context.Context, msg []byte) error {
	in := new(_pb.BinaryMethodResponse)

	if err := proto.Unmarshal(msg, in); err != nil {
		return err
	}

	return srv.(TestAPIServer).BinaryMethod(ctx, in)
}

var _TestAPI_serviceDesc = qrpc.ServiceDesc{
	ServiceName: "qrpc.test.api.TestAPI.out",
	HandlerType: (*TestAPIServer)(nil),
	Methods: []qrpc.MethodDesc{
		{
			MethodName: "BinaryMethod",
			Handler:    _TestAPI_BinaryMethod_Handler,
		},
	},
}

// Test2APIClient is the client API for Test2API service.
type Test2APIClient interface {
	EmptyMethod(context.Context, *empty.Empty) error
}

type test2APIClient struct {
	cc *qrpc.ClientConn
}

func NewTest2APIClient(cc *qrpc.ClientConn) Test2APIClient {
	cc.SetService("qrpc.test.api.Test2API.in")
	return &test2APIClient{cc}
}

func (c *test2APIClient) EmptyMethod(ctx context.Context, in *empty.Empty) error {
	data, err := proto.Marshal(in)
	if err != nil {
		return err
	}

	return c.cc.Invoke(ctx, qrpc.Message{
		Method: "EmptyMethod",
		Data:   data,
	})
}
